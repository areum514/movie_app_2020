{"version":3,"sources":["Movies.js","App.js","reportWebVitals.js","index.js"],"names":["Moives","id","year","title","summary","small_cover_image","genres","className","src","alt","map","genre","index","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSA6BeA,MAzBf,YAAiE,EAAhDC,GAAiD,IAA9CC,EAA6C,EAA7CA,KAAKC,EAAwC,EAAxCA,MAAMC,EAAkC,EAAlCA,QAAQC,EAA0B,EAA1BA,kBAAkBC,EAAQ,EAARA,OACzD,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAmBI,IAAI,UACjC,sBAAKF,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC5BI,EAAOI,KAAI,SAACC,EAAMC,GAAP,OACZ,oBAAgBL,UAAU,gBAA1B,SAA2CI,GAAlCC,MAET,mBAAGL,UAAU,iBAAb,SAA+BH,WC4B5BS,E,4MArCbC,MAAM,CACJC,WAAU,EACVC,OAAO,I,EAGTC,U,sBAAW,8BAAAC,EAAA,sEAC4BC,IAAMC,IAAI,6CADtC,gBACUJ,EADV,EACFK,KAAMA,KAAML,OACnB,EAAKM,SAAS,CAACN,SAAOD,WAAU,IAFvB,2C,kEAMTQ,KAAKN,c,+BAGE,IAAD,EACqBM,KAAKT,MAAzBC,EADD,EACCA,UAAUC,EADX,EACWA,OACjB,OACE,yBAAST,UAAU,WAAnB,SACCQ,EACE,8BACC,sBAAMR,UAAU,eAAhB,2BAEC,qBAAKA,UAAU,SAAf,SACAS,EAAON,KAAI,SAAAc,GAAK,OAAE,cAAC,EAAD,CACGvB,GAAIuB,EAAMvB,GACxBC,KAAMsB,EAAMtB,KACZC,MAAOqB,EAAMrB,MACbC,QAASoB,EAAMpB,QACfC,kBAAmBmB,EAAMnB,kBACzBC,OAAQkB,EAAMlB,QALTkB,EAAMvB,e,GAzBXwB,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1b88cc85.chunk.js","sourcesContent":["import React from \"react\"\r\nimport propTypes from \"prop-types\"\r\nimport \"./Movie.css\"\r\n\r\nfunction Moives({id,year,title,summary,small_cover_image,genres}){\r\nreturn (\r\n    <div className=\"movie\">\r\n        <img src={small_cover_image} alt=\"title\"/>\r\n        <div className=\"movie__data\">\r\n            <h3 className=\"movie__title\">{title}</h3>\r\n            <h5 className=\"movie__year\">{year}</h5>\r\n            {genres.map((genre,index)=> (\r\n            <li key={index} className=\"genres__genre\">{genre}</li>\r\n            ))}    \r\n            <p className=\"movie__summary\">{summary}</p>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nMoives.propTypes={\r\n    id: propTypes.number.isRequired,\r\n    year: propTypes.number.isRequired,\r\n    title: propTypes.string.isRequired,\r\n    summary: propTypes.string.isRequired,\r\n    small_cover_image: propTypes.string.isRequired,\r\n    genres:propTypes.arrayOf(propTypes.string).isRequired\r\n}\r\n\r\nexport default Moives;","import React from \"react\"\r\nimport axios from \"axios\"\r\nimport Moives from \"./Movies\"\r\n\r\nclass App extends React.Component{\r\n  state={\r\n    isLoading:true,\r\n    movies:[]\r\n  }\r\n  \r\n  getMovies= async ()=>{\r\n    const {data:{data:{movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\r\n    this.setState({movies,isLoading:false})\r\n\r\n  }\r\n  componentDidMount(){\r\n    this.getMovies()\r\n  }\r\n\r\n  render(){\r\n    const {isLoading,movies} = this.state\r\n    return (\r\n      <section className=\"continer\">\r\n      {isLoading?\r\n        (<div>\r\n          <span className=\"loader__text\">Loading....</span>\r\n        </div>\r\n        ):(<div className=\"movies\">\r\n          {movies.map(movie=><Moives \r\n                  key={movie.id}id={movie.id} \r\n                  year={movie.year} \r\n                  title={movie.title} \r\n                  summary={movie.summary} \r\n                  small_cover_image={movie.small_cover_image}\r\n                  genres={movie.genres}/>)}\r\n        </div>)}\r\n      \r\n      </section>\r\n      )\r\n    ;\r\n  }\r\n}\r\nexport default App;\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}